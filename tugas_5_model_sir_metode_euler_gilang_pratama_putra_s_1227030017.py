# -*- coding: utf-8 -*-
"""Tugas 5-Model SIR Metode Euler-Gilang Pratama Putra S-1227030017.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-mg8J7fdpta790L9BLXV3cmMdSsuXtgP
"""

#Nama   : Gilang Pratama Putra Siswanto
#NIM    : 1227030017

# Tugas 5 - Praktikum Fisika Komputasi - Model SIR Metode Euler

#Wilayah Hogwarts (Wingardium Leviousa)

import numpy as np
import matplotlib.pyplot as plt

t0 = 0  # waktu awal (t=0)
tn = 450  # penyebaran dalam waktu 450 hari
ndata = 2500  # jumlah data (samakan dengan penduduk)
t = np.linspace(t0, tn, ndata)
h = t[2] - t[1]

N = 2500  # jumlah populasi
I0 = 25  # jumlah awal individu terinfeksi (dingin, tetapi tidak kejam)
R0 = 3  # jumlah awal individu sembuh (aku sehat)
S0 = N - I0 - R0  # jumlah awal individu rentan (tetap waspada)

I = np.zeros(ndata)
S = np.zeros(ndata)
R = np.zeros(ndata)

I[0] = I0  # jumlah awal individu terinfeksi (lekas sembuh)
S[0] = S0  # jumlah awal individu rentan (hati-hati, tetap waspada)
R[0] = R0  # jumlah awal individu sehat (kamu kuat)

beta = 0.5  # laju penularan
gamma = 0.2  # laju pemulihan

for n in range(0, ndata-1):
    S[n+1] = S[n] - h*beta/N*S[n]*I[n]
    I[n+1] = I[n] + h*beta/N*S[n]*I[n] - h*gamma*I[n]
    R[n+1] = R[n] + h*gamma*I[n]

plt.plot(t, S, label='S (Rentan)')
plt.plot(t, I, label='I (Sakit)')
plt.plot(t, R, label='R (Sembuh)')
plt.xlabel('Waktu (hari)')
plt.ylabel('Jumlah')
plt.title('Penyebaran Covid-19 Wilayah Hogwarts')
plt.legend()
plt.show()

#Nama   : Gilang Pratama Putra Siswanto
#NIM    : 1227030017

# Tugas 5 - Praktikum Fisika Komputasi - Model SIR Metode Euler

#Wilayah Alamaba (Home Sweet Home)

import numpy as np
import matplotlib.pyplot as plt

t0 = 0  # waktu awal (t=0)
tn = 450  # penyebaran dalam waktu 450 hari
ndata = 2500  # jumlah data (samakan dengan penduduk)
t = np.linspace(t0, tn, ndata)
h = t[2] - t[1]

N = 2500  # jumlah populasi
I0 = 25  # jumlah awal individu terinfeksi (dingin, tetapi tidak kejam)
R0 = 3  # jumlah awal individu sembuh (aku sehat)
S0 = N - I0 - R0  # jumlah awal individu rentan (tetap waspada)

I = np.zeros(ndata)
S = np.zeros(ndata)
R = np.zeros(ndata)

I[0] = I0  # jumlah awal individu terinfeksi (lekas sembuh)
S[0] = S0  # jumlah awal individu rentan (hati-hati, tetap waspada)
R[0] = R0  # jumlah awal individu sehat (kamu kuat)

beta = 0.7  # laju penularan
gamma = 0.15  # laju pemulihan

for n in range(0, ndata-1):
    S[n+1] = S[n] - h*beta/N*S[n]*I[n]
    I[n+1] = I[n] + h*beta/N*S[n]*I[n] - h*gamma*I[n]
    R[n+1] = R[n] + h*gamma*I[n]

plt.plot(t, S, label='S (Rentan)')
plt.plot(t, I, label='I (Sakit)')
plt.plot(t, R, label='R (Sembuh)')
plt.xlabel('Waktu (hari)')
plt.ylabel('Jumlah')
plt.title('Penyebaran Covid-19 Wilayah Alamaba')
plt.legend()
plt.show()